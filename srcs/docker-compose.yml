version: '3.8'
services:
  mariadb:
    container_name: mariadb  # Le nom du container, oui vraiment.
    networks:
      - inception  # à quel network il appartient
    build: 
      context: requirements/mariadb  # ou se trouve son Dockerfile
      dockerfile: Dockerfile  # le nom du Dockerfile ?!
    env_file: .env  # le fichier d'environnement pour transmettre les variables
    volumes:  # Voir plus bas
      - mariadb:/var/lib/mysql
    restart: on-failure  # redémarre tant qu'il n'est pas stoppé 

  nginx:
    container_name: nginx
    volumes:
      - wordpress:/var/www/html
    networks:
      - inception
    depends_on:  # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
      - wordpress
    build: 
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443"  # on indique le port qui sera exposé a la machine locale
    restart: on-failure  # Ici nous changeons, le container redémarrera uniquement en cas de crash.

  wordpress:
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress:/var/www/html
    networks:
      - inception
    build: 
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on:  # WordPress démarrera uniquement après MariaDB
      - mariadb
    restart: on-failure

volumes:
  wordpress:
    driver: local  # ici nous stockons le volume en local
    driver_opts:
      type: 'none'  # aucun type spécifique
      o: 'bind'
      device: '/home/momihamm/data/wordpress'  # Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'  # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte
      device: '/home/momihamm/data/mariadb'  # Ou stocker le dossier sur votre ordinateur en local

networks:
  inception:
    driver: bridge